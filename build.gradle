plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	id 'com.google.cloud.tools.jib' version '3.4.0'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.wable'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// for cognito
	implementation platform('software.amazon.awssdk:bom:2.20.56')
	implementation 'software.amazon.awssdk:s3'
	// NOTE: Is Not Working
	// implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.security:spring-security-config:6.0.2'

	// 이거 쓰니까 되더라구요
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

	// jpa query logging
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'software.amazon.awssdk:cognitoidentityprovider:2.20.66'
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}

jib {
	from {
    	image = 'eclipse-temurin:17-jdk-focal'
  	}
	to {
		image = 'ghcr.io/ddd-community/ddd-10-wable-server:main'
	}
	container {
		entrypoint = ['java', '-Dspring.profiles.active=dev', '-jar', 'harmonika-0.0.1-SNAPSHOT.jar']

		jvmFlags = ['-Xms512m', '-Xmx512m', '-Xdebug', '-XshowSettings:vm', '-XX:+UnlockExperimentalVMOptions', '-XX:+UseContainerSupport']
		ports = ['8080']

		environment = [SPRING_OUTPUT_ANSI_ENABLED: "ALWAYS"]
		labels = [version:project.version, name:project.name, group:project.group]

		creationTime = 'USE_CURRENT_TIMESTAMP'
		format = 'Docker'
	}
	extraDirectories {
		paths {	
			path {
				from = file('build/libs')
			}
		}
	}
}